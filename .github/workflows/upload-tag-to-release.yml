##  This is a basic workflow to help you get started with Actions
##  https://github.com/actions/upload-release-asset
# This outputs a brouser_download_url
# For subsequent steps like an upload to Google or somewhere
# https://github.com/actions/create-releaâ€¦
#
# Note that we have a hard-coded file here so change the xlsx as needed
# so make sure to copy the file into
# ./covid-surge-who.xlsx as an env variable
# https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables
# Current duplicates release asset
# https://github.com/actions/upload-release-asset/issues/28
# Explains how to use hub to do this for you
# with `hub release create "file" -m "comment" "tag_name"
---
name: Upload a Tag to a Release Multiple files

env:
  WA_RELEASE: covid-surge-who.xlsx
  REED_RELEASE: covid-surge-who-reed.xlsx
  COUNTY_RELEASE: covid-surge-who-county.xlsx
  SINGLE_RELEASE: covid-surge-who-single.xlsx
  COOK_RELEASE: covid-surge-who-single-cook.xlsx
  MIAMI_RELEASE: covid-surge-who-single-miami.xlsx
  CA_RELEASE: covid-surge-who-single-ca.xlsx

# Controls when the action will run. Triggers the workflow on push or pull
# request events but only for the master branch
# Only run for tagged pushed
on:
  push:
    tags:
      - 'v*'  # so the tag should be v1.0, v2.1, v2.1.2-2020-05


# A workflow run is made up of one or more jobs that can run sequentially
# or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Upload Release Asset
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed
    steps:
      # Not sure why this is needed not in other tutorials
      - name: Checkout code
        uses: actions/checkout@v2
        # with lfs is too slow
        # with:
        #  lfs: true
      - name: Extract tag
        # https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
        id: vars
        # Extract just the last bit
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Checkout LFS Objects
        # https://git-scm.com/book/en/v2/Git-Basics-Tagging
        # note git lfs pull only allows one --include flat at a time
        run: |
          for release in "$WA_RELEASE" "$COOK_RELEASE" "$MIAMI_RELEASE" \
                         "$SINGLE_RELEASE" "$COUNTY_RELEASE" \
                         "$CA_RELEASE" "$REED_RELEASE"
          do
            git lfs pull --include "$release"
          done

      # https://github.com/softprops/action-gh-release
      # Unlike standard release works with multiple files
      - name: Release Multiple Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # make sure we only do this on a tagged release
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: false
          prerelease: false
          files: |
            ${{ env.WA_RELEASE }}
            ${{ env.SINGLE_RELEASE }}
            ${{ env.COOK_RELEASE }}
            ${{ env.COUNTY_RELEASE }}
            ${{ env.MIAMI_RELEASE }}
            ${{ env.CA_RELEASE }}
            ${{ env.REED_RELEASE }}

    # Need the tag name that is clean
    # We only have a tag, so make a release out of it
    # https://github.com/actions/create-release
    # - name: Create release
    #  id: create_release
    #  uses: actions/create-release@v1
    #  # this needs a token
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    tag_name: ${{ steps.vars.outputs.tag  }}
    #    release_name: Release ${{ steps.vars.outputs.tag }}
    #    # Use this is you just want the sha
    #    # tag_name: ${{ github.ref }}
    #    # release_name: Release ${{ github.ref }}
    #    body: |
    #      New release
    ## move it up there need one for each
    # - name: Upload Release Asset ${{ env.WA_RELEASE }}
    #  id: upload-release-asset-1
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    # The URL for uploading assets to the release
    #    # upload_url: ${{ github.event.release.upload_url }}
    #    # You get this from the create release set
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    # The path to the asset you want to upload
    #    asset_path: ./${{ env.WA_RELEASE }}
    #    # The name of the asset you want to upload
    #    # Not there is no release tag_name so use the output of create_release
    #    # This will just give the sha and not the desired tag
    #    # https://github.com/actions/create-release
    #    # asset_name: covid-surge-projection-release-${{ steps.create_release.outputs.id }}.xlsx
    #    asset_name: covid-surge-projection-washington-${{ steps.vars.outputs.tag }}.xlsx
    #    asset_content_type: application/zip
    #
    ## move it up there need one for each
    ## note that the id filed cannot take a variable, so must be hard named
    # - name: Upload Release Asset ${{ env.SINGLE_RELEASE }}
    #  id: upload-release-asset-2
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    # The URL for uploading assets to the release
    #    # upload_url: ${{ github.event.release.upload_url }}
    #    # You get this from the create release set
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    # The path to the asset you want to upload
    #    asset_path: ./${{ env.SINGLE_RELEASE }}
    #    # The name of the asset you want to upload
    #    # Not there is no release tag_name so use the output of create_release
    #    # This will just give the sha and not the desired tag
    #    # https://github.com/actions/create-release
    #    # asset_name: covid-surge-projection-release-${{ steps.create_release.outputs.id }}.xlsx
    #    asset_name: covid-surge-projection-single-${{ steps.vars.outputs.tag }}.xlsx
    #    # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
    #    asset_content_type: application/zip
    #
    ## move it up there need one for each
    ## note that the id filed cannot take a variable, so must be hard named
    # - name: Upload Release Asset ${{ env.COOK_RELEASE }}
    #  id: upload-release-asset-3
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    # The URL for uploading assets to the release
    #    # upload_url: ${{ github.event.release.upload_url }}
    #    # You get this from the create release set
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    # The path to the asset you want to upload
    #    asset_path: ./${{ env.COOK_RELEASE }}
    #    # The name of the asset you want to upload
    #    # Not there is no release tag_name so use the output of create_release
    #    # This will just give the sha and not the desired tag
    #    # https://github.com/actions/create-release
    #    # asset_name: covid-surge-projection-release-${{ steps.create_release.outputs.id }}.xlsx
    #    asset_name: covid-surge-projection-single-cook${{ steps.vars.outputs.tag }}.xlsx
    #    # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
    ##    asset_content_type: application/zip

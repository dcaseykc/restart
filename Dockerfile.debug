FROM gitpod/workspace-full
LABEL maintainer="Restart Us <admin@restart.us>"
# Set environment for setup
ARG CONDA_ENV=nb
ARG DOCKER_USER=gitpod

# To be used in gitpod.io must be debian/ubuntu or alpine based
# Must also have a gitpod use
# With the jupyter/scipy-notebook base we end up with two users
# gitpod and joyvan
# This is set for make files of restart
#
# Emulate activate for the Makefiles
# https://pythonspeed.com/articles/activate-conda-dockerfile/
# Call create_conda(env) to prep and finish_conda() after ## create_conda_(env, python_version,pip, pip_only)


#
# https://github.com/gitpod-io/gitpod/tree/master/components/image-builder/workspace-image-layer/gitpod-layer
#
# https://github.com/jupyter/docker-stacks/blob/master/base-notebook/start.sh
# https://linuxconfig.org/configure-sudo-without-password-on-ubuntu-20-04-focal-fossa-linux





# create_user(user, group, groupuserid)


# set_env(user,conda-env)




# https://peteris.rocks/blog/quiet-and-unattended-installation-with-apt-get/
USER root
RUN mkdir -p /var/lib/apt/lists && apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -qq \
                    make \
                    vim \
                    sudo \
                    gosu \
                    git \
                    && \
    apt-get clean && rm -rf /var/lib/apt/list/*


# This version from https://hub.docker.com/r/continuumio/miniconda3/dockerfile
# as of September 2020
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH
RUN apt-get update --fix-missing && \
    apt-get install -y wget bzip2 ca-certificates curl git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# adjust permissions as root
RUN mkdir -p /opt && \
    chown -R $DOCKER_USER /opt && \
    mkdir -p /etc/profile.d && \
    chown "$DOCKER_USER" /etc/profile.d

USER $DOCKER_USER
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh && \
        /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda clean -tipsy && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

RUN conda env list | grep "^$CONDA_ENV" || conda create --name $CONDA_ENV
RUN \
    echo env=$CONDA_ENV python=$PYTHON pip=$PIP pip_only=$PIP_ONLY && \
    conda config --add channels conda-forge && \
    ## conda config --set channel_priority strict && \
    conda install --name $CONDA_ENV --quiet --yes python=$PYTHON \
               $PIP && \
    exit
    #conda run -n $CONDA_ENV pip install \
    #            $PIP_ONLY && \
    #conda clean -afy && \
    #conda init



#USER $DOCKER_USER
#ENV HOME=/home/$DOCKER_USER
##RUN PATH+="/opt/conda/bin:$PATH" && \
    #    conda env list && \
    #echo "export ENV=conda" >> "$HOME/.bashrc" && \
    #conda init && \
    #echo "conda activate $CONDA_ENV" >> "$HOME/.bashrc" && \
    #eval "$(command conda 'shell.bash' 'hook' 2>/dev/null)" && \
    #conda activate $CONDA_ENV


WORKDIR /home/$DOCKER_USER/workspace
